# Generated by Django 4.2.23 on 2025-09-09 20:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid
import vitrine.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qr_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('main_banner', models.ImageField(blank=True, null=True, upload_to=vitrine.models.store_image_path)),
                ('carousel_2', models.ImageField(blank=True, null=True, upload_to=vitrine.models.store_image_path)),
                ('carousel_3', models.ImageField(blank=True, null=True, upload_to=vitrine.models.store_image_path)),
                ('carousel_4', models.ImageField(blank=True, null=True, upload_to=vitrine.models.store_image_path)),
                ('highlight', models.BooleanField(default=False)),
                ('is_vip', models.BooleanField(default=False)),
                ('is_deactivated', models.BooleanField(default=False)),
                ('whatsapp_link_1', models.URLField(blank=True, null=True, verbose_name='WhatsApp_1')),
                ('whatsapp_link_2', models.URLField(blank=True, null=True, verbose_name='WhatsApp_2')),
                ('phone_link', models.CharField(blank=True, max_length=20, null=True)),
                ('instagram_link', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('facebook_link', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('x_link', models.URLField(blank=True, null=True, verbose_name='X')),
                ('google_maps_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='Google Maps')),
                ('youtube_link', models.URLField(blank=True, null=True, verbose_name='YouTube')),
                ('anota_ai_link', models.URLField(blank=True, null=True, verbose_name='Anota Ai')),
                ('ifood_link', models.URLField(blank=True, null=True, verbose_name='iFood')),
                ('flyer_pdf', models.FileField(blank=True, null=True, upload_to='flyers/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='StoreOpeningHour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_range', models.CharField(max_length=50)),
                ('time_range', models.CharField(max_length=50)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opening_hours', to='vitrine.store')),
            ],
        ),
        migrations.AddField(
            model_name='store',
            name='tags',
            field=models.ManyToManyField(blank=True, to='vitrine.tag'),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('icon', models.CharField(blank=True, default='fa-th', max_length=50)),
                ('tags', models.ManyToManyField(blank=True, related_name='categories', to='vitrine.tag')),
            ],
        ),
        migrations.CreateModel(
            name='ClickTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_type', models.CharField(choices=[('main_banner', 'Main Banner'), ('whatsapp_link_1', 'WhatsApp Link 1'), ('whatsapp_link_2', 'WhatsApp Link 2'), ('instagram_link', 'Instagram Link'), ('facebook_link', 'Facebook Link'), ('youtube_link', 'YouTube Link'), ('x_link', 'X Link'), ('google_maps_link', 'Google Maps Link'), ('anota_ai_link', 'Anota Ai Link'), ('ifood_link', 'iFood Link'), ('phone_link', 'Phone Link'), ('home_access', 'Home Access'), ('flyer_pdf', 'flyer PDF')], max_length=50)),
                ('click_count', models.PositiveIntegerField(default=0)),
                ('last_clicked', models.DateTimeField(auto_now=True)),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clicktrack', to='vitrine.store')),
            ],
            options={
                'unique_together': {('store', 'element_type')},
            },
        ),
    ]
